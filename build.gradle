plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.7'
    id "org.jetbrains.kotlin.jvm" version "2.0.0"
}

group = project.property('group')
version = project.property('version')

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io/'
    }
}

dependencies {
    // Paper
    compileOnly 'io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.0"

    // Libraries
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'joda-time:joda-time:2.12.7'
    implementation 'com.typesafe:config:1.4.3'

    // Discord4J but without opus-java and also use the latest version of okhttp3 pls ty
    implementation('net.dv8tion:JDA:5.0.0-beta.24') {
        exclude module: 'opus-java'
    }
    implementation 'com.squareup.okhttp3:okhttp'
    constraints {
        implementation('com.squareup.okhttp3:okhttp:5.0.0-alpha.14') {
            because 'L'
        }
    }

    // Dependency plugins
    compileOnly 'net.luckperms:api:5.4'

    // Test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
}

processResources {
    def props = [group: project.property('group'), name: project.property('modulename'), version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    destinationDirectory = file('../test/server/plugins')
    archiveBaseName.set(project.property('modulename'))
    archiveClassifier.set('')
}